{"version":3,"sources":["ui/layout.tsx","ui/post-item.tsx","ui/spinner.tsx","components/posts.tsx","store/action-types.ts","store/reducer.ts","store/store.ts","components/search-input.tsx","store/action-creators.ts","index.tsx","app.tsx"],"names":["Root","Object","linaria_react","name","class","Layout","_ref","children","react_default","a","createElement","vars","r1ephxzh-0","p","Title","CreatedTime","AuthorName","Avatar","Link","Column","Row","PostItem","idx","createdAt","title","authorName","avatarUrl","url","post_item_Root","src","alt","concat","href","target","rel","Spinner","spinner_Root","SpinnerWrapper","Error","NotFound","Posts","_useSelector","useSelector","state","posts","loading","error","alreadySearched","es","spinner_Spinner","posts_Root","post","post_item_PostItem","key","id","format","actionTypes","initialState","store","createStore","arguments","length","undefined","action","type","LOAD_POSTS_START","objectSpread","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAIL","applyMiddleware","thunk","Form","Input","SubmitButton","SearchInput","_useState","useState","_useState2","slicedToArray","queryValue","setQueryValue","dispatch","useDispatch","onSubmitForm","useCallback","e","query","asyncToGenerator","regenerator_default","mark","_callee","startAction","response","data","successAction","failAction","wrap","_context","prev","next","fetch","sent","json","items","slice","map","item","created_at","user","login","avatar_url","html_url","abrupt","t0","stop","_x","apply","this","onSubmit","value","placeholder","onChange","ReactDOM","render","layout_Layout","search_input_SearchInput","posts_Posts","document","getElementById"],"mappings":"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","file":"static/js/main.c5cbf38d.chunk.js","sourcesContent":["import React from 'react'\nimport { styled } from 'linaria/react'\n\nconst Root = styled.div`\n  width: 100%;\n  padding-top: 5%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const Layout: React.FC = ({ children }) => <Root>{children}</Root>\n","import React from 'react'\nimport { Post } from 'types'\nimport { styled } from 'linaria/react'\n\nconst Root = styled.li<{ idx: number }>`\n  list-style-type: none;\n  display: flex;\n  height: 80px;\n  width: 100%;\n\n  margin-top: 20px;\n\n  animation-name: appear;\n  animation-timing-function: ease-out;\n  animation-fill-mode: forwards;\n  animation-iteration-count: 1;\n  animation-duration: 0.5s;\n  animation-delay: ${(p) => p.idx * 0.1}s;\n  opacity: 0;\n\n  @keyframes appear {\n    from {\n      opacity: 0;\n      transform: translateX(5%);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n`\n\nconst Title = styled.h2`\n  font-size: 1.1rem;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  width: 100%;\n`\n\nconst CreatedTime = styled.time`\n  font-size: 0.9rem;\n  color: #aaa;\n`\n\nconst AuthorName = styled.p`\n  font-size: 1.2rem;\n  margin-right: 10px;\n  font-weight: bold;\n`\n\nconst Avatar = styled.img`\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n  object-fit: contain;\n  margin-right: 20px;\n  flex-shrink: 0;\n`\n\nconst Link = styled.a`\n  display: inline-block;\n`\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: calc(100% - 100px);\n  justify-content: space-between;\n  align-items: flex-start;\n`\n\nconst Row = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const PostItem: React.FC<Post & { idx: number }> = ({\n  idx,\n  createdAt,\n  title,\n  authorName,\n  avatarUrl,\n  url\n}) => (\n  <Root idx={idx}>\n    <Avatar src={avatarUrl} alt={`Avatar of user ${authorName}`} />\n\n    <Column>\n      <Row>\n        <AuthorName>{authorName}</AuthorName>\n        <CreatedTime>{createdAt}</CreatedTime>\n      </Row>\n\n      <Title>{title}</Title>\n\n      <Link href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Watch full post\n      </Link>\n    </Column>\n  </Root>\n)\n","import React from 'react'\nimport { styled } from 'linaria/react'\n\nconst Root = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 51px;\n    height: 51px;\n    margin: 6px;\n    border: 6px solid #42fa42;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #42fa42 transparent transparent transparent;\n  }\n\n  div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n  div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n  div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n\n  @keyframes lds-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport const Spinner: React.FC = () => (\n  <Root>\n    <div />\n    <div />\n    <div />\n    <div />\n  </Root>\n)\n","import React from 'react'\nimport { shallowEqual, useSelector } from 'react-redux'\nimport { styled } from 'linaria/react'\nimport { StoreState } from 'store/types'\nimport { PostItem, Spinner } from 'ui'\nimport { format } from 'date-fns'\n\nconst Root = styled.ul`\n  width: 100%;\n  max-width: 850px;\n  list-style-type: none;\n  flex-grow: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  ::-webkit-scrollbar {\n    width: 0.5rem;\n    border-radius: 0.1rem;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #ddd;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #42fa42;\n  }\n`\n\nconst SpinnerWrapper = styled.div`\n  margin-top: 50px;\n`\n\nconst Error = styled.div`\n  margin-top: 50px;\n  font-size: 1.5rem;\n`\n\nconst NotFound = styled.div`\n  margin-top: 50px;\n  font-size: 1.5rem;\n`\n\nexport const Posts: React.FC = () => {\n  const { posts, loading, error, alreadySearched } = useSelector(\n    (state: StoreState) => {\n      const { posts, loading, error, alreadySearched } = state\n\n      return { posts, loading, error, alreadySearched }\n    },\n    shallowEqual\n  )\n\n  if (!alreadySearched) return null\n  if (loading)\n    return (\n      <SpinnerWrapper>\n        <Spinner />\n      </SpinnerWrapper>\n    )\n\n  if (error) return <Error>{error}</Error>\n  if (posts.length === 0) return <NotFound>No issues were found</NotFound>\n\n  return (\n    <Root>\n      {posts.map((post, idx) => (\n        <PostItem\n          key={post.id}\n          idx={idx}\n          id={post.id}\n          url={post.url}\n          title={post.title}\n          createdAt={format(post.createdAt, 'DD.MM.YYYY')}\n          avatarUrl={post.avatarUrl}\n          authorName={post.authorName}\n        />\n      ))}\n    </Root>\n  )\n}\n","export enum actionTypes {\n  LOAD_POSTS_START,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAIL\n}\n","import { StoreState } from './types'\nimport { actionTypes } from './action-types'\nimport {\n  LoadPostsSuccessAction,\n  LoadPostsFailAction,\n  LoadPostsStartAction\n} from './types'\n\ntype Action =\n  | LoadPostsFailAction\n  | LoadPostsSuccessAction\n  | LoadPostsStartAction\n\nconst initialState: StoreState = {\n  posts: [],\n  loading: false,\n  error: null,\n  alreadySearched: false\n}\n\nexport const reducer = (state = initialState, action: Action): StoreState => {\n  switch (action.type) {\n    case actionTypes.LOAD_POSTS_START:\n      return {\n        ...state,\n        alreadySearched: true,\n        loading: true,\n        error: null\n      }\n    case actionTypes.LOAD_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.posts,\n        loading: false,\n        error: null\n      }\n    case actionTypes.LOAD_POSTS_FAIL:\n      return {\n        ...state,\n        posts: [],\n        loading: false,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { reducer } from './reducer'\n\nexport const store = createStore(reducer, undefined, applyMiddleware(thunk))\n","import React, { useState, useCallback } from 'react'\nimport { styled } from 'linaria/react'\nimport { useDispatch } from 'react-redux'\nimport { searchPosts } from 'store'\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n`\n\nconst Input = styled.input`\n  padding: 8px 14px;\n  padding-right: 0;\n  flex-grow: 1;\n  font-size: 1.2rem;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border: 2px solid #31da32;\n`\n\nconst SubmitButton = styled.button`\n  background: none;\n  border: none;\n  background-color: #31da32;\n  color: #fff;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n`\n\nexport const SearchInput: React.FC = () => {\n  const [queryValue, setQueryValue] = useState('')\n  const dispatch = useDispatch()\n\n  const onSubmitForm = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault()\n\n      if (queryValue === '') return\n\n      dispatch(searchPosts(queryValue))\n    },\n    [queryValue, dispatch]\n  )\n\n  return (\n    <Form onSubmit={onSubmitForm}>\n      <Input\n        type=\"text\"\n        value={queryValue}\n        placeholder=\"Search for github issues\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setQueryValue(e.target.value)\n        }\n      />\n\n      <SubmitButton type=\"submit\">SEARCH</SubmitButton>\n    </Form>\n  )\n}\n","import { Dispatch } from 'redux'\nimport { Post } from 'types'\n\nimport { actionTypes } from './action-types'\nimport {\n  LoadPostsSuccessAction,\n  LoadPostsFailAction,\n  LoadPostsStartAction\n} from './types'\n\nconst API_URL = 'https://api.github.com/search/issues'\n\nexport const searchPosts = (query: string) => async (dispatch: Dispatch) => {\n  try {\n    const startAction: LoadPostsStartAction = {\n      type: actionTypes.LOAD_POSTS_START\n    }\n\n    dispatch(startAction)\n\n    const response = await fetch(`${API_URL}?q=${query}`)\n\n    const data = await response.json()\n\n    const posts: Post[] = data.items.slice(0, 20).map((item: any) => ({\n      id: item.id,\n      createdAt: item.created_at,\n      title: item.title,\n      authorName: item.user.login,\n      avatarUrl: item.user.avatar_url,\n      url: item.html_url\n    }))\n\n    const successAction: LoadPostsSuccessAction = {\n      type: actionTypes.LOAD_POSTS_SUCCESS,\n      posts\n    }\n\n    return dispatch(successAction)\n  } catch (e) {\n    const failAction: LoadPostsFailAction = {\n      type: actionTypes.LOAD_POSTS_FAIL,\n      error: 'Error occured while loading posts'\n    }\n\n    return dispatch(failAction)\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './app'\n\nimport 'reset-css'\nimport './global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { Posts, SearchInput } from './components'\nimport { store } from './store'\nimport { Layout } from './ui'\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Layout>\n        <SearchInput />\n        <Posts />\n      </Layout>\n    </Provider>\n  )\n}\n"],"sourceRoot":""}